// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GetUser Get current user specified in context when no ID is given 1`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "email": "hi@me.com",
      "level": 3,
      "name": "current user",
      "points": Object {
        "currentLevel": 3,
        "nextLevel": 5,
        "total": 3,
      },
      "repliedArticleCount": 2,
      "votedArticleReplyCount": 3,
    },
  },
}
`;

exports[`GetUser Get limited data 1`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "email": null,
      "level": 0,
      "name": "test user",
      "points": Object {
        "currentLevel": 0,
        "nextLevel": 1,
        "total": 0,
      },
      "repliedArticleCount": 0,
      "votedArticleReplyCount": 0,
    },
  },
}
`;

exports[`GetUser Get user avatar url from gravatar 1`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "avatarUrl": "https://www.gravatar.com/avatar/ca87e79f73877094f4cd381a38dbc356?s=100&d=identicon&r=g",
      "name": "test email user",
    },
  },
}
`;

exports[`GetUser Get user avatar url from gravatar 2`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "avatarUrl": "https://www.gravatar.com/avatar/ca87e79f73877094f4cd381a38dbc356?s=100&d=identicon&r=g",
      "name": "test email user",
    },
  },
}
`;

exports[`GetUser Get user by id and slug should fail 1`] = `
Array [
  [GraphQLError: cannot search by both id and slug],
]
`;

exports[`GetUser Get user by slug: currentUser 1`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "id": "current-user",
      "name": "current user",
      "slug": "def456",
    },
  },
}
`;

exports[`GetUser Get user by slug: testEmailUser 1`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "id": "test-email-user",
      "name": "test email user",
      "slug": "ghi789",
    },
  },
}
`;

exports[`GetUser Get user by slug: testUser 1`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "id": "test-user",
      "name": "test user",
      "slug": "abc123",
    },
  },
}
`;

exports[`GetUser returns avatarUrl/avatarData based on avatarType selected by User: currentUser 1`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "availableAvatarTypes": Array [
        "OpenPeeps",
        "Gravatar",
        "Github",
      ],
      "avatarData": null,
      "avatarType": "Github",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/654321?s=100",
      "id": "current-user",
    },
  },
}
`;

exports[`GetUser returns avatarUrl/avatarData based on avatarType selected by User: openPeepsUser 1`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "availableAvatarTypes": null,
      "avatarData": "{\\"key\\":\\"value\\"}",
      "avatarType": "OpenPeeps",
      "avatarUrl": null,
      "id": "another-user",
    },
  },
}
`;

exports[`GetUser returns avatarUrl/avatarData based on avatarType selected by User: testEmailUser 1`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "availableAvatarTypes": Array [
        "OpenPeeps",
        "Gravatar",
      ],
      "avatarData": null,
      "avatarType": null,
      "avatarUrl": "https://www.gravatar.com/avatar/ca87e79f73877094f4cd381a38dbc356?s=100&d=identicon&r=g",
      "id": "test-email-user",
    },
  },
}
`;

exports[`GetUser returns avatarUrl/avatarData based on avatarType selected by User: testUser 1`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "availableAvatarTypes": null,
      "avatarData": null,
      "avatarType": "Facebook",
      "avatarUrl": "https://graph.facebook.com/v9.0/123456/picture?height=100",
      "id": "test-user",
    },
  },
}
`;

exports[`GetUser returns badge information for user with displayed badge: userWithBadge 1`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "badges": Array [
        Object {
          "badgeId": "test-badge-id",
          "isDisplayed": true,
        },
      ],
      "id": "test-user",
      "majorBadgeBorderUrl": "https://example.com/badge-border.png",
      "majorBadgeImageUrl": "https://example.com/badge-icon.png",
      "majorBadgeName": "Test Badge",
    },
  },
}
`;

exports[`GetUser returns contributions of a user 1`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "contributions": Array [
        Object {
          "count": 2,
          "date": "2020-02-02",
        },
        Object {
          "count": 1,
          "date": "2020-02-03",
        },
        Object {
          "count": 1,
          "date": "2020-02-04",
        },
      ],
      "id": "current-user",
    },
  },
}
`;

exports[`GetUser returns null for badge fields when user has no displayed badge: userWithoutBadge 1`] = `
Object {
  "data": Object {
    "GetUser": Object {
      "badges": Array [],
      "id": "user-without-badge",
      "majorBadgeBorderUrl": null,
      "majorBadgeImageUrl": null,
      "majorBadgeName": null,
    },
  },
}
`;
